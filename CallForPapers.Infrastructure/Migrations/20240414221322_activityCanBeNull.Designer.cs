// <auto-generated />
using System;
using CallForPapers.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CallForPapers.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240414221322_activityCanBeNull")]
    partial class activityCanBeNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CallForPapers.Infrastructure.Model.Application", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("create_date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 4, 15, 1, 13, 21, 978, DateTimeKind.Local).AddTicks(6940));

                    b.Property<string>("description")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("plan")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("send_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("applications", t =>
                        {
                            t.HasCheckConstraint("ValidApplication", "user_id IS NOT NULL AND (activity IS NOT NULL  OR name IS NOT NULL OR description IS NOT NULL OR plan IS NOT NULL )");
                        });
                });

            modelBuilder.Entity("CallForPapers.Infrastructure.Model.Application", b =>
                {
                    b.OwnsOne("CallForPapers.Infrastructure.Model.Activity.ActivityClass", "activity", b1 =>
                        {
                            b1.Property<Guid>("Applicationid")
                                .HasColumnType("uuid");

                            b1.Property<string>("activity")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("Applicationid");

                            b1.ToTable("applications");

                            b1.WithOwner()
                                .HasForeignKey("Applicationid");
                        });

                    b.Navigation("activity");
                });
#pragma warning restore 612, 618
        }
    }
}
